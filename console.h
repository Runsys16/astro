//--------------------------------------------------------------------------------------------------------------------
//
//--------------------------------------------------------------------------------------------------------------------
#ifndef CONSOLE_H
#define CONSOLE_H  1
//--------------------------------------------------------------------------------------------------------------------
//
//--------------------------------------------------------------------------------------------------------------------
#include <GL/glew.h>
#include <GL/glut.h>

#include <stdio.h>

#include <WindowsManager.h>
#include "panel_console_serial.h"
#include "serial.h"
#include "main.h"

using namespace std;

//--------------------------------------------------------------------------------------------------------------------
//
//--------------------------------------------------------------------------------------------------------------------
class Console : public PanelConsoleCallBack
{
public:
    Console();
    
    void                            initMap();
	virtual void					callback_cmd(std::string);
	
	void                            cmd_null();
	void                            cmd_help();
	void                            cmd_quit();
	void                            commande(string);

protected:
	std::string						option;

	typedef void(Console::*ConsoleFonction)(void);
	typedef std::map<std::string, ConsoleFonction> ConsoleFonctionMap;

	ConsoleFonctionMap				FonctionMap;

};

//--------------------------------------------------------------------------------------------------------------------
//          MACRO
//--------------------------------------------------------------------------------------------------------------------
#define CONSOLE_MAP_CMD(str,f)						{FonctionMap[str] = &Console::f;}

//--------------------------------------------------------------------------------------------------------------------
//
//--------------------------------------------------------------------------------------------------------------------


#endif
